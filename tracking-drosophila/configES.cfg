      
/************** ARCHIVO DE CONFIGURACIÓN TRACKING_DROSOPHILA ****************
******                                                                ******
******	En este archivo se almacenan los parámetros de configuración  ******
******  de la aplicación. 					      					  ******
****** 								                                  ******
******	ADVERTENCIA: Modificar única y exclusivamente el campo        ******
******	correspondiente al valor del parámetro ( = valor ;)  	      ******
******  En caso contrario la ejecución del programa  podría fallar    ******
******  o bien podrían	producirse resultados inesperados en la misma.******
******                 						                          ******
******	Se recomienda encarecidamente  guardar una copia se seguridad  ******
******	del fichero original así como copias de las configuraciones   ******
******	creadas por el usuario. En caso de no encontrarse el fichero  ******
******	se cargarán las opciones por defecto.			              ******
******								                                  ******	
****************************************************************************/
	
version = 1.0;	

/**** CONSIDERACIONES PREVIAS ACERCA DE LA CONFIGURACIÓN ****/

/*	Antes de modificar parámetros de configuración del fichero, se deberán tener en cuenta los siguientes aspectos:
	- Se ha de respetar de forma estricta la notación de los valores numéricos y booleanos. Aquellos valores que 
	figuren con notación entera deberán seguir con dicha notación. Lo mismo es válido para de notación decimal y booleana
	A modo de ejmplo, si un valor decimal figura como 0.0 y se cambia al entero 0, prodría provocar errores en la lectura. 
	Un valor booleano sólo deberá tomar los valores true (1) o false (0).
	- Un fallo en la lectura de la variable o un valor incorrecto del parámetro provocará la carga del valor por defecto.
	Se informará por consola del parámetro afectado y del valor asignado.
	- Si en un campo la opción Auto se establece a true, los valores de las variables de dicho  campo serán ignorados 
	y se establecerán los valores por defecto. NOTA. no todos los campos disponen de esta opción.
	- Existe la posibilidad de establecer ciertos parámetros de forma automática. Si es así se indicará en los comentarios
	de dicha variable. Es indispensable que la variable auto sea false.
*/ 

/****************************** OPCIONES GENERALES DEL PROGRAMA *******************************/
	General:
	{
	    Auto = false;
	    
		MaxFlat = 0.0 ;		// - Este parámetro se usa para calibrar la cámara
							// En caso de no introducir valor las medidas de las
							// distacias serán en pixels. Una vez encontrado el 
							// plato, se usará su ancho en píxels y el valor aquí
							// introducido para establecer los pixels por mm.
		
		FPS = 15;		    // tasa de frames por segundo del vídeo. Se usa para 
							// para establecer la unidad de tiempo.
							
							// Un valor 0 indica detección automática
							
							// NOTA:  En algunos videos la obtención de la tasa
							// de frames es errónea, con el consiguiente error 
							// en las medidas que intervengan tiempos. Si se observa
							// que la tasa de frames indicada en la pantalla de 
							// visualización difiere de la real del video, se ha de
							// modificar este parámetro y establezcer la real. Se ha 
							// observado dicho fallo con archivos *.wmv. Se recomienda 
							// codificar los vídeos con MPEG en cualquiera de sus formatos.
							// Consultar documentación para mayor detalle.
		
		TotalFrames = 0.0;	// Número de frames que contiene el vídeo. Se usa para 
							// establecer el progreso y realizar los saltos en 
							// el modelo de fondo.
							
							// Un valor 0 indica detección automática
							
							// NOTA: Como en el caso de FPS, en algunos formatos de vídeo
							// puede resultar errónea. En dicho caso, introducir aquí el 
							// valor correcto.
		
		InitDelay = 50;  	// - Los primeros x frames serán ignorados.
							// incrementar o decrementar en función de la estabilidad
							// de la imagen en los primeros frames.
							
							// Un valor -1 indica valor por defecto
		
		MedirTiempos = false;		// - Activa la medición de tiempos de los distintos
									// módulos ( pre_procesado, procesado, tracking, 
									// estadísticas y visualización)
	}
	
	/******************************* MODULO DE ESTADÍSTICAS ******************************/
	
	Estadisticas:	
	{		
		Auto = false;				// Si true, se establecerán los parámetros por defecto.
		
		CALC_STATS_MOV = true; 		// Switch true/false para activar el cálculo de estadísticas de movimiento
												
							
		MAX_TIME = 8;				// Establece el periodo máximo de la media móvil simple para el cálculo de
									// la cantidad de movimiento de los blobs en conjunto, o lo que es lo mismo,
									// el tamaño máximo del vector  que almacena las cantidades de movimiento
									// de cada frame.
									
									// VALORES: 0,1,2,4,8,16,24,48
														
									// Esto es, un valor de 1 indica que se calcularán estadísticas de la última hora como máximo.
									// y así sucesivamente hasta el máximo de 48 horas. Un valor de 0 indirá el máximo.
									
									// ACLARACIÓN: Suponiendo un Frame Rate de 30, un valor de 48 horas supondrá almacenar 
									// en memoria un vector de 7020000 elementos con el consiguiente coste computacional
									// y de memoria.
		
		PERIODO_VELOCIDAD_MEDIA = 15 ; 		// Establece el período de tiempo (en frames) para el cual se calcula la media móvil de 
											// la velocidad de cada blob. Un valor demasiado alto afectaría al rendimiento.
											
											// ACLARACIÓN: Suponiendo un Frame Rate de 30 y un período de 30 , se calcularía la  
											// velocidad media de un segundo. ( pixels/s ).
											 
											
		UMBRAL_ACTIVIDAD_ALTA 	= 2 ;		// Establece el umbral de velocidad media (en mm/s) a partir de la cual se considerará 
											// que un blob tiene actividad ALTA
											
		UMBRAL_ACTIVIDAD_MEDIA	= 1 ;		// Establece el umbral de velocidad media (en mm/s) a partir de la cual se considerará 
											// que un blob tiene actividad MEDIA
		
		UMBRAL_ACTIVIDAD_BAJA	= 0.5 ;		// Establece el umbral de velocidad media (en mm/s) a partir de la cual se considerará 
											// que un blob tiene actividad BAJA
											
		UMBRAL_ACTIVIDAD_NULA	= 0.2 ;		// Establece el umbral de velocidad media (en mm/s) a partir de la cual se considerará 
											// que un blob tiene actividad INACTIVO
	}
	
	/******************************* MODULO DE VISUALIZACIÓN   ******************************/
	
	// OPCIONES GENERALES
	
	Visualizacion:
	{ 
		Auto = false;
		
		GrabWindow = true;					// Switch de 0 a 1 para grabar la ventana de visualización.
											// puede ser activado o no independientemente de que se active o no el general.
		
		ShowWindow = true; 					// Switch GENERAL de 0 a 1 para mostrar la ventana de visualización
											// NOTA:Los siguientes parámetros no se tendrán en cuenta si no se activa 
		
		ShowPresent = false ;				// Switch de 0 a 1 para visualizar presentación inicial.
							    
		ShowTransition = false;				// Muestra una animaciones entre las distintas partes del proceso.
		
		HightGUIControls = true ;			// Activa controles de visualización:
											// Mientras se ejecuta el programa, si se pulsa:
							 				/* 	p : se pone en modo pausa hasta presionar c.	
							 				 	r : Inicia la grabación de un video con los resultados.
							 					s : Detiene la grabación del video
							 					f : Avanza frame a frame hasta presionar c. 
							 					c : Permite continuar con la ejecución normal. 
												g : Hace una captura de pantalla ( solo funciona en modo pausa )
													Se guarda en formato jpeg.*/		
		
		ModoCompleto = false;			// Switch GENERAL true/false para visualizar los resultados de los distintos módulos.
		
										// NOTA1: Al activar esta opción el rendimiento disminuirá de forma notable.
										
										// NOTA2: Los siguientes parámetros no se tendrán en cuenta si no se activa 
										// 	  	  el modo detallado.				
			
			ShowBGdiffImages  = false ; 		// Switch de 0 a 1 para visualizar las imagenes antes y despues de la limpieza de FG.
			
			// Resultados de preprocesado
			ShowLearningFlat = true;
			ShowInitBackground = true;
			ShowShapeModel= true; 			// Switch true/false para visualizar los resultados del modelado de forma.
			
			// Resultados de procesado
			ShowProcessPhases = false ; 		// Switch true/false para visualizar los resultados del procesado etapa a etapa.			
			ShowValidationPhases = false;		// Switch true/false para visualizar las imagenes de la validación etapa a etapa.
			ShowBGremoval = true; 			// Switch true/false para visualizar el Background y Foreground.
			ShowKalman = true;
		
	
	}
	
	/******************************* CONFIGURACION DEL MODULO DE PRE-PROCESADO  ******************************/
	
	Preprocesado:
	{		
											// MODELADO DE FONDO //	
											
		// Para detalles de configuración consultar la documentación del proyecto o bien:
		// - NIHMS109817-supplement-1
		// - Background subtraction techniques:a review. Massimo Piccardi */	
		// - Detecting Moving Objects, Ghosts, and Shadows in Video Streams. Rita Cucciara
		// - Learning OpenCv	
			    
		BackGroundModel:
		{											
			/// PARÁMETROS INICALES
			
			FLAT_DETECTION = true;		// - Activa o desactiva la detección del plato.
											// La no detección afectará al rendimiento de la 
											// aplicación y a la calibración de la cámara. Si no se activa o bien no 
											// se logra detectar el plato, las medidas se establecerán en pixels/s
											
			FLAT_FRAMES_TRAINING = 500;		// Número de frames que se usarán para detectar el plato.
											// en caso de que falle la detección modificar este parámetro.
											// Si no se ha activado la detección este parámetro es ignorado. Si se establece
											// a 0, por defecto serán 500 frames. 
			
			MODEL_TYPE = 4;					// - El tipo de modelo puede ser:
											/*	1) GAUSSIAN 1 Modelo de Gaussiana simple sin actualización selectiva 
												2) GAUSSIAN_UP 2 Modelo de Gaussiana simple con actualización selectiva. 
											 	3) MEDIAN 3 Modelo de mediana simple sin actualización selectiva 
											 	4) MEDIAN_S_UP 4 Modelo de mediana simple con actualización selectiva 
											 			
			
			BG_Update = 5;					// Intervalo de actualización del fondo. Si el vídeo es muy ruidoso este 
											// parámetro debería ser 1 o próximo a 1. 
			
			initDelay = 50;					// - Los primeros x frames serán ignorados.
											// incrementar o decrementar en función de la estabilidad
											// de la imagen en los primeros frames.
			
			Jumps = 4;						// Con el fin de lograr un modelo de fondo limpio de blobs, se efectúan saltos
											// a lo largo del vídeo para minimizar la posibilidad de que blobs estáticos 
											// formen parte del fondo. Se consigue así una detección de todos los blobs en 
											// la primera iteración del procesado.			
			
			FRAMES_TRAINING = 700;			// - Frames de entrenamiento para el aprendizaje del fondo.
											// Establecer un valor tal que la imagen del fondo aparezca limpia de blobs.				
								 
			INITIAL_DESV = 0.05;			// - Establece la desviación inicial del modelo de fondo gaussiano. 
											// Para fondos unimodales y poco ruidosos un valor bajo. NIHMS109817-supplement-1
											
			K = 0.6745;						//Para la corrección de la MAD ( Median Absolute Deviation )
											//con el que se estima la desviación típica para el modelo gaussiano.
			
		}	
										// MODELADO DE FORMA //		
		
		// Para detalles de configuración consultar la documentación del proyecto o bien:
		// - NIHMS109817-supplement-1
		// - Background subtraction techniques:a review. Massimo Piccardi */	
		// - Detecting Moving Objects, Ghosts, and Shadows in Video Streams. Rita Cucciara
		// - Learning OpenCv	
		
		ShapeModel:								
		{
			BGModel:
			{						
				LOW_THRESHOLD = 15;						
				
				/// PARAMETROS PARA LA LIMPIEZA DEL FG
				
				MORFOLOGIA = true;			
				CVCLOSE_ITR = 1;			
				MAX_CONTOUR_AREA = 0 ; 			
				MIN_CONTOUR_AREA = 0; 			
				HIGHT_THRESHOLD = 20;		
			}		
			
			Max_Area = 100					// Al modelar la forma, se excluirán del cálculo aquellos blobs con un área mayor de Max_area Pixels
				
			Max_Perimeter = 1000				// Al modelar la forma, se excluirán del cálculo aquellos blobs con un perímetro mayor de Max_Perimeter Pixels
		}
	}

	/******************************* CONFIGURACION DEL MODULO DE PROCESADO  ******************************/
			
	Procesado:
	{		
			BGModel:
			{			
				MODEL_TYPE = 4;			
				BG_Update = 10;			
				K = 0.6745;					
				LOW_THRESHOLD = 15;			
				
				/// PARAMETROS PARA LA LIMPIEZA DEL FG
				
				MORFOLOGIA = true;			
				CVCLOSE_ITR = 1;			
				MAX_CONTOUR_AREA = 0 ; 			
				MIN_CONTOUR_AREA = 0; 			
				HIGHT_THRESHOLD = 20;		
	 		}
	 		
	 		// Para detalles de configuración consultar la documentación del proyecto o bien:
			// - NIHMS109817-supplement-1
			
	 		Validacion:
	 		{
	 			BGModel:
	 			{
				 	MODEL_TYPE = 4;	
				 	MORFOLOGIA = false;
					CVCLOSE_ITR = 0;
					MAX_CONTOUR_AREA = 0 ;
					MIN_CONTOUR_AREA = 0;				
					HIGHT_THRESHOLD = 20;
					LOW_THRESHOLD = 15;
				}
				
				UmbralCirc = 0;
				Umbral_H = 5.0;		// Establece el tamaño máximo del blob válido en 5 desviaciones típicas de la media
									// Cuando un blob tiene un defecto de area, para verificar que no se trata de un espurio,
									// se aumenta el umbral en la resta de fondo para comprobar si su area aumenta. Este umbral
									// establece el límite de dicho aumento.
									
									
				Umbral_L = 5.0;		// Establece el tamaño mínimo del blob válido en 5 desviaciones típicas de la media			
									// Cuando un blob tiene un exceso de area, se incrementa paulatinamente el umbral de la
									// resta de fondo con el fin de reducir progresivamente su area. Como consecuencia,
									// si dicho blob está formado por dos moscas, esto provocará su fición para un determinado
									// umbral. El límite de dicho umbral es Umbral_L. Para mas detalles consultar documentación
									// o bien el artículo NIHMS109817-supplement-1																
				
				MaxDecLTHIters = 100; 	// número máximo de veces que se podrá decrementar el umbral bajo
									
				MaxIncLTHIters= 20;  	// número máximo de veces que se podrá incrementar el umbral bajo
				MaxLowTH = 1000; 		// límite superior para el umbral bajo ( exceso )
				MinLowTH = 1;		 	// límite inferior para el umbral bajo ( defecto )
			}							
	}
	
	/******************************* CONFIGURACION DEL MODULO DE TRACKING  ******************************/
	
	Tracking:
	{
	
		MAX_BLOBS = 10 ;			// Número máximo de elementos a rastrear	
									 
		MAX_BUFFER = 50 ;			// Longitud del buffer. El módulo de tracking mantiene en memoria un número de frames 
									// igual al valor introducido. Supondría almacenar MAX_BUFFER / FPS segundos de video.
									// Cuanta mayor sea la longitud del buffer, más eficaz será la fase de corrección y 
									//  a la vez mayores serán las necesidades de memoria, con lo que un valor demasiado alto podría 
									// afectar seriamente al rendimiento del equipo y por consiguiente, de la aplicación.
									// Para un con procesador Intel(R) Pentium(R) M a 1.73GHz y 1 Gb de RAM
									// corriendo Ubuntu 10.10 y GNOME 2.32.0 se aconseja un máximo de 80
		
		MAX_TIME_SLEPT = 200;		// Marca un tiempo máximo en farmes a partir del cual se eliminará un track. Dicho track ha 
									// de cumplir ciertas condiciones para ser eliminado:
									// 1) Haber perdido el objeto a rastrear y no encontrarlo durante MAX_TIME_SLEPT frames
									// 2) Ser un track no prioritario, es decir, un track cuya de id sea superior al número máximo de blobs									

		NUMBER_OF_IDENTITIES = 100;	// Número máximo de identidades que se podrán asignar a los tracks. Cada vez que se crea un track, se le 
									// asigna una identidad. Durante la ejecución pueden crearse tracks para falsos blobs ( por ejemplo reflejos)
									// que serán posteriormente eliminados.
									
		/* Configuración del filtro de kalman. ¡ SEA CUIDADOSO !. 
		 Por cada elemento a rastrear se crea un track y se inicia un filtro de kalman. Éste tiene dos finalidades:
		 - Por un lado  se usa para realizar una predicción de la posición de la mosca en el instante t+1.
		 - Por otro lado se usa para realizar un filtrado en la dirección del blob, ya se ve muy afectada por el ruido.
		 Para más detalles consultar documentación o el artículo
		 Stochastic models, estimation, and control VOLUME1 PETER S: MAYBECK 1979
		 Kalman Filters: A tutorial 1999
		 Observadores de Estado en Procesos Estocásticos: El Filtro de Kalman. Daniel Pizarro Pérez
		 Learning OpenCv.*/
	
		Kalman:
		{						
			Inicializacion:
			{
				VELOCIDAD = 5.3; //10.599 	// velocidad inicial del blob en pixeles por frame
				V_ANGULAR =2.6;//5.2 			// velocidad angular del blob en pixeles por frame
				TIEMPO_INICIO = 20 ;		// En los primeros instantes el filtro de la dirección 
											// se configura para que tenga una convergencia rápida
											// a la dirección del blob. Esta variable establece 
											// el tiempo que se mantiene el filtro en este estado.
				 
				measurement_noise = { Vx = 0, Vy = 0, Vvx = 0, Vvy = 0 , Vphi = 0 }; 			// Media del ruido V->N(0,R)
				
				// Covarianza del ruido. Inicialmente se establece un valor elevado ya que ésta 
				// puede diferir en 180º de la real.								
										
				measurement_noise_cov = { R_x = 1,R_y = 1, R_Vx = 2,R_Vy = 2, R_phiZk = 360};																						
																										
				process_noise_cov = 1 ; 					// Matriz Q. Error asociado al modelo del sistema 		
															// En la práctica se usa para representar lo que se desconoce
															// del modelo Q = ( B,F,H ). P_k' = F P_k-1 Ft + Q
															// El valor indica la unidad a la que se inicia la matriz   
			}
			
			/* Estado normal del filtro. Recibe nueva medida y ésta se corresponde con el blob al que sigue.
			   El ruido será el asociado al sistema de adquisición de imagen.
			   
			CamControl:
			{
				Auto = true;		// Switch de 0 a 1 para calcular de forma automática el ruido en la medida
									// si es true los siguientes parámetros no afectan
				// Inicialmente, para acelerar la convergencia					
				measurement_noise_t_0 = { Vx = 0, Vy = 0, Vvx = 0, Vvy = 0, Vphi = 0 };				 				
				measurement_noise_cov_t_0 = { R_x = 1,R_y = 1, R_Vx = 2,R_Vy = 2, R_phiZk = -1 };	
				 
				
				measurement_noise = { Vx = 0, Vy = 0, Vvx = 0, Vvy = 0 , Vphi = 0 };
				
				// R_phiZk se calcula de forma automática. Es el parámetro a filtrar.		
				measurement_noise_cov = { R_x = 1,R_y = 1, R_Vx = 2,R_Vy = 2, R_phiZk = -1 };   
				
			}
			
			/* Estado de oclusión ( choque de blobs). Recibe una nueva medida, sin embargo tendrá mayor incertidumbre que
			   en el caso de CamControl ya que los elementos objeto del rastreo han chocado y no se distingue con precisión 
			   la posición de cada uno.
			   Este valor modifica la ganancia K del filtro. Dicha ganancia
			   será menor cuanto mayor sea la incertidumbre en la medida. Esto implica que al aumentar la incertidumbre, tendrá 
			   más peso el valor de la predicción del filtro para el instante t + 1 que el valor de la nueva medida de t+1.
			   Se ven afectadas por lo tanto la fase de corrección, y posteriormente la fase de predicción.
			   
			KalmanControl:
			{
				Auto = true; 		/* si true por defecto	
										R_x = Fly->Roi.width/2; // la anchura/2 del rectángulo que contiene al blob
										R_y = Track->Fly->Roi.height/2; // la altura/2 del rectángulo que contiene al blob
										R_Vx = 2*R_x;
										R_Vy = 2*R_y;
										R_phiZk = 1000;
									*/
				measurement_noise = { Vx = 0, Vy = 0, Vvx = 0, Vvy = 0 , Vphi = 0 };	// V->N(0,R)
				measurement_noise_cov = { R_x = 200,R_y =200, R_Vx = 400,R_Vy = 400, R_phiZk = 1000 };
				
			}
			
		}
	}
			
			
			
			
